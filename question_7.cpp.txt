#include<bits/stdc++.h>
using namespace std;
const int mod = 1e9+7;
char g[1002][1002];
int solve(long long n, long long m) {
    int dp[1024][1024] = {0};
    dp[0][0] = 1;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            if (g[i][j] == '#')continue;
            if (i == 0 and j == 0)continue;
            if (i == 0) {
                dp[i][j] = dp[i][j - 1];
            }
            else if (j == 0) {
                dp[i][j] = dp[i - 1][j];
            }
            else {
                dp[i][j] = ((dp[i][j] % mod ) + (dp[i - 1][j] % mod) + (dp[i][j - 1] % mod)) % mod;
            }
        }

    }
    return dp[n - 1][m - 1]%mod;
}
int main() {
    long long n, m;
    cin >> n >> m;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            cin >> g[i][j];
        }
    }
    int k = solve(n, m);
    cout << k << '\n';
}